"use client"
import Image from "next/image";
import { useState ,useEffect} from "react";
export default function Home() {
  const [latitude, setlatitude]=useState(0);
  const [longitude, setlongitude]=useState(0);
  const [address, setaddress]=useState("");
  const apikey= "f25045a3bfba42e5b061e8490742f01e";
  useEffect(()=>{
    const fetchaddress=()=>{
      if ('geolocation' in navigator) {
        const watchId =navigator.geolocation.watchPosition(
          (position) => {
            // Success callback
            setlatitude(position.coords.latitude);
     //
            setlongitude(position.coords.longitude);
          },
          (error) => {
            // Error callback
            console.error('Error occurred:', error.message);
          }
        );}   
    }
     const  getaddress=()=>{
      const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitude},${longitude}&key=${apikey}`;
        fetch(url)
        .then(response => response.json())
        .then(data => {
          if (data.results && data.results.length > 0) {
            setaddress(data.results[0].formatted); // This gives you the formatted address
            console.log(address);
          } else {
            console.error("No results found");
          }
        })
        .catch(error => console.error('Error:', error));
    }
    fetchaddress();
    getaddress();
      }
      ,[])
  return (
   <div className="">
    <div className="flex bg-gray-900 gap-5 text-white">
      <img src="/images/logo2.png" className="w-24 h-16 rounded-full"></img>
      <div>current location</div>
      <div>signin/register</div>
    </div>
    <div>
        image to be rendered 
    </div>
   </div>
  );
}


######################### THe code for accessing location ########################################

 ///// accessing address 
  const [latitude, setlatitude]=useState(0);
  const [longitude, setlongitude]=useState(0);
  const [address, setaddress]=useState("");
  const apikey= "f25045a3bfba42e5b061e8490742f01e";
    useEffect(()=>{
      if ('geolocation' in navigator) {
        const watchId =navigator.geolocation.watchPosition(
          (position) => {
            setlatitude(position.coords.latitude);
            setlongitude(position.coords.longitude);   
          },
          (error) => {
            // Error callback
            console.error('Error occurred:', error.message);
          }
        );}   
    },[])
    const setlocation= async (a)=>{
      setaddress(a);
    }
    useEffect(()=>{
      if (latitude !== 0 && longitude !== 0) {
        const fetchAddress = async () => {
          const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitude},${longitude}&key=${apikey}`;
          try {
            const response = await fetch(url);
            const data = await response.json();
            if (data.results && data.results.length > 0) {
              await setlocation(data.results[0].formatted);
              console.log(address);
            } else {
              console.error("No address results found");
            }
          } catch (error) {
            console.error('Error fetching address:', error);
          }
        };
  
        fetchAddress();
    }}
      ,[latitude,longitude])
############################# code ends #########################################################

 const url="mongodb://localhost:27017/";
  const dbname= "ecommerce-website";
  async function fetchingimages()
  {
    const client= new MongoClient(url);
    await client.connect();
    const db=client.db(dbname);
    const collection = db.collection("images");
    const data =await collection.find({}).toArray();
    console.log(data);
  }
###################################################################################################
import React from 'react'
import mongoose from "mongoose";
import { MongoClient } from "mongodb";
export async function GET (request) {
  console.log("ok");
    const url="mongodb://localhost:27017/";
    const dbname= "ecommerce-website";
    async function fetchingimages()
    {
      const client= new MongoClient(url);
      await client.connect();
      const db=client.db(dbname);
      const collection = db.collection("images");
      const data =await collection.find({}).toArray();
      console.log(data);
  
      return new Response(JSON.stringify(data), {
        status: 200,
        headers: { 'Content-Type': 'application/json' },
      });
    }
    return fetchingimages();
}
######################## page.js get data code ################################